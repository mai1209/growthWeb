{"ast":null,"code":"var _jsxFileName = \"/Users/maidev/Desktop/maiWork/growth-web/src/components/ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\n// src/components/ProtectedRoute.jsx\nimport React from 'react';\nimport { useAuth } from '../context/authContext';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = () => {\n  _s();\n  const {\n    isAuthenticated,\n    loading\n  } = useAuth();\n\n  // Mientras se verifica la autenticación, mostramos un mensaje de carga\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si no está autenticado, lo redirigimos a la página de login\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si está autenticado, renderizamos el componente hijo (la página protegida)\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n_s(ProtectedRoute, \"F3aPsg481KjBH7Z7iYl6LJifZz0=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useAuth","Navigate","Outlet","jsxDEV","_jsxDEV","ProtectedRoute","_s","isAuthenticated","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["/Users/maidev/Desktop/maiWork/growth-web/src/components/ProtectedRoute.jsx"],"sourcesContent":["// src/components/ProtectedRoute.jsx\nimport React from 'react';\nimport { useAuth } from '../context/authContext';\nimport { Navigate, Outlet } from 'react-router-dom';\n\nconst ProtectedRoute = () => {\n  const { isAuthenticated, loading } = useAuth();\n\n  // Mientras se verifica la autenticación, mostramos un mensaje de carga\n  if (loading) {\n    return <div>Cargando...</div>;\n  }\n\n  // Si no está autenticado, lo redirigimos a la página de login\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  // Si está autenticado, renderizamos el componente hijo (la página protegida)\n  return <Outlet />;\n};\n\nexport default ProtectedRoute;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,eAAe;IAAEC;EAAQ,CAAC,GAAGR,OAAO,CAAC,CAAC;;EAE9C;EACA,IAAIQ,OAAO,EAAE;IACX,oBAAOJ,OAAA;MAAAK,QAAA,EAAK;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC/B;;EAEA;EACA,IAAI,CAACN,eAAe,EAAE;IACpB,oBAAOH,OAAA,CAACH,QAAQ;MAACa,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,oBAAOT,OAAA,CAACF,MAAM;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACP,EAAA,CAfID,cAAc;EAAA,QACmBL,OAAO;AAAA;AAAAgB,EAAA,GADxCX,cAAc;AAiBpB,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}