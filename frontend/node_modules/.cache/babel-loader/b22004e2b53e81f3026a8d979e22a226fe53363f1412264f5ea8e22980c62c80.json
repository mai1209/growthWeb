{"ast":null,"code":"var _jsxFileName = \"/Users/maidev/Desktop/maiWork/growth-web/src/context/authContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { login as loginService, signup as signupService } from '../services/auth.js';\n\n// 1. Crear el contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// 2. Crear el Proveedor del contexto\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null); // Almacenará el userId\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Efecto para cargar el token desde localStorage al iniciar la app\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    if (storedToken && storedUser) {\n      setToken(storedToken);\n      setUser(JSON.parse(storedUser));\n      setIsAuthenticated(true);\n    }\n    setLoading(false);\n  }, []);\n\n  // Función de Login\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const data = await loginService(email, password);\n      setUser(data.userId);\n      setToken(data.token);\n      setIsAuthenticated(true);\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.userId));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Error al iniciar sesión');\n      setIsAuthenticated(false);\n    }\n  };\n\n  // Función de Signup (similar a login)\n  const signup = async (email, password) => {\n    try {\n      setError(null);\n      const data = await signupService(email, password);\n      setUser(data.userId);\n      setToken(data.token);\n      setIsAuthenticated(true);\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.userId));\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Error al registrarse');\n      setIsAuthenticated(false);\n    }\n  };\n\n  // Función de Logout\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  const value = {\n    user,\n    token,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    signup,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 10\n  }, this);\n};\n\n// 3. Hook personalizado para usar el contexto fácilmente\n_s(AuthProvider, \"dSiHeQHX9FiKbZs+v3rSriEV08A=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","login","loginService","signup","signupService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","storedToken","storedUser","JSON","parse","email","password","data","userId","setItem","stringify","err","_err$response","_err$response$data","response","_err$response2","_err$response2$data","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/maidev/Desktop/maiWork/growth-web/src/context/authContext.jsx"],"sourcesContent":["// src/context/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { login as loginService, signup as signupService } from '../services/auth.js';\n\n\n// 1. Crear el contexto\nconst AuthContext = createContext();\n\n// 2. Crear el Proveedor del contexto\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null); // Almacenará el userId\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Efecto para cargar el token desde localStorage al iniciar la app\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n\n    if (storedToken && storedUser) {\n      setToken(storedToken);\n      setUser(JSON.parse(storedUser));\n      setIsAuthenticated(true);\n    }\n    setLoading(false);\n  }, []);\n\n  // Función de Login\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const data = await loginService(email, password);\n      \n      setUser(data.userId);\n      setToken(data.token);\n      setIsAuthenticated(true);\n      \n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.userId));\n      \n    } catch (err) {\n      setError(err.response?.data?.error || 'Error al iniciar sesión');\n      setIsAuthenticated(false);\n    }\n  };\n  \n  // Función de Signup (similar a login)\n  const signup = async (email, password) => {\n    try {\n      setError(null);\n      const data = await signupService(email, password);\n      \n      setUser(data.userId);\n      setToken(data.token);\n      setIsAuthenticated(true);\n      \n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.userId));\n      \n    } catch (err) {\n      setError(err.response?.data?.error || 'Error al registrarse');\n      setIsAuthenticated(false);\n    }\n  };\n\n  // Función de Logout\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n\n  const value = {\n    user,\n    token,\n    isAuthenticated,\n    loading,\n    error,\n    login,\n    signup,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{!loading && children}</AuthContext.Provider>;\n};\n\n// 3. Hook personalizado para usar el contexto fácilmente\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}