{"ast":null,"code":"var _jsxFileName = \"/Users/maidev/Desktop/maiWork/growth-web/src/components/InputMonto.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Este componente es \"controlado\", recibe su valor y una función para cambiarlo desde el padre.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputMonto({\n  value,\n  onChange,\n  placeholder,\n  className\n}) {\n  _s();\n  const [displayValue, setDisplayValue] = useState('');\n\n  // Sincroniza el valor formateado cuando el valor del padre cambia (ej: al resetear el form)\n  useEffect(() => {\n    if (value) {\n      const formatted = parseFloat(value).toLocaleString('es-AR');\n      setDisplayValue(formatted);\n    } else {\n      setDisplayValue('');\n    }\n  }, [value]);\n  const handleChange = e => {\n    let rawValue = e.target.value;\n\n    // 1. Limpia el valor para procesarlo (quita puntos de miles)\n    rawValue = rawValue.replace(/\\./g, '');\n    // Reemplaza la coma decimal por un punto para que JS lo entienda\n    rawValue = rawValue.replace(',', '.');\n    // Elimina cualquier caracter no numérico (excepto el primer punto decimal)\n    rawValue = rawValue.replace(/[^0-9.]/g, '');\n    const parts = rawValue.split('.');\n    if (parts.length > 2) {\n      rawValue = parts[0] + '.' + parts.slice(1).join('');\n    }\n\n    // 2. Llama a la función onChange del componente padre con el valor limpio y sin formato\n    onChange(rawValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    name: \"monto\",\n    className: className,\n    type: \"text\",\n    inputMode: \"decimal\",\n    placeholder: placeholder || \"Ingresar monto\",\n    required: true,\n    value: displayValue // Mostramos el valor formateado\n    ,\n    onChange: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(InputMonto, \"KWqk0u2acBVn77Do0vhGyQOd/Z0=\");\n_c = InputMonto;\nexport default InputMonto;\nvar _c;\n$RefreshReg$(_c, \"InputMonto\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","InputMonto","value","onChange","placeholder","className","_s","displayValue","setDisplayValue","formatted","parseFloat","toLocaleString","handleChange","e","rawValue","target","replace","parts","split","length","slice","join","name","type","inputMode","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maidev/Desktop/maiWork/growth-web/src/components/InputMonto.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// Este componente es \"controlado\", recibe su valor y una función para cambiarlo desde el padre.\nfunction InputMonto({ value, onChange, placeholder, className }) {\n  const [displayValue, setDisplayValue] = useState('');\n\n  // Sincroniza el valor formateado cuando el valor del padre cambia (ej: al resetear el form)\n  useEffect(() => {\n    if (value) {\n      const formatted = parseFloat(value).toLocaleString('es-AR');\n      setDisplayValue(formatted);\n    } else {\n      setDisplayValue('');\n    }\n  }, [value]);\n  \n  const handleChange = (e) => {\n    let rawValue = e.target.value;\n\n    // 1. Limpia el valor para procesarlo (quita puntos de miles)\n    rawValue = rawValue.replace(/\\./g, '');\n    // Reemplaza la coma decimal por un punto para que JS lo entienda\n    rawValue = rawValue.replace(',', '.');\n    // Elimina cualquier caracter no numérico (excepto el primer punto decimal)\n    rawValue = rawValue.replace(/[^0-9.]/g, '');\n\n    const parts = rawValue.split('.');\n    if (parts.length > 2) {\n      rawValue = parts[0] + '.' + parts.slice(1).join('');\n    }\n\n    // 2. Llama a la función onChange del componente padre con el valor limpio y sin formato\n    onChange(rawValue);\n  };\n\n  return (\n    <input\n      name=\"monto\"\n      className={className}\n      type=\"text\"\n      inputMode=\"decimal\"\n      placeholder={placeholder || \"Ingresar monto\"}\n      required\n      value={displayValue} // Mostramos el valor formateado\n      onChange={handleChange}\n    />\n  );\n}\n\nexport default InputMonto;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,UAAUA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,WAAW;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC/D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACd,IAAII,KAAK,EAAE;MACT,MAAMO,SAAS,GAAGC,UAAU,CAACR,KAAK,CAAC,CAACS,cAAc,CAAC,OAAO,CAAC;MAC3DH,eAAe,CAACC,SAAS,CAAC;IAC5B,CAAC,MAAM;MACLD,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAEX,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1B,IAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACb,KAAK;;IAE7B;IACAY,QAAQ,GAAGA,QAAQ,CAACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IACtC;IACAF,QAAQ,GAAGA,QAAQ,CAACE,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;IACrC;IACAF,QAAQ,GAAGA,QAAQ,CAACE,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;IAE3C,MAAMC,KAAK,GAAGH,QAAQ,CAACI,KAAK,CAAC,GAAG,CAAC;IACjC,IAAID,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;MACpBL,QAAQ,GAAGG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;IACrD;;IAEA;IACAlB,QAAQ,CAACW,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEd,OAAA;IACEsB,IAAI,EAAC,OAAO;IACZjB,SAAS,EAAEA,SAAU;IACrBkB,IAAI,EAAC,MAAM;IACXC,SAAS,EAAC,SAAS;IACnBpB,WAAW,EAAEA,WAAW,IAAI,gBAAiB;IAC7CqB,QAAQ;IACRvB,KAAK,EAAEK,YAAa,CAAC;IAAA;IACrBJ,QAAQ,EAAES;EAAa;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEN;AAACvB,EAAA,CA5CQL,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AA8CnB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}