{"ast":null,"code":"var _jsxFileName = \"/Users/maidev/Desktop/maiWork/growth-web/src/components/Tareas.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport style from '../style/Tarea.module.css';\n\n// Función auxiliar para obtener la fecha de hoy en formato YYYY-MM-DD\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getTodayString = () => {\n  const today = new Date();\n  // Ajustamos por la zona horaria para evitar problemas de un día antes/después\n  today.setMinutes(today.getMinutes() - today.getTimezoneOffset());\n  return today.toISOString().slice(0, 10);\n};\nfunction Tareas({\n  token,\n  refreshKey\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // 1. Nuevo estado para guardar la fecha seleccionada. Inicia con el día de hoy.\n  const [selectedDate, setSelectedDate] = useState(getTodayString());\n  useEffect(() => {\n    const fetchTasks = async () => {\n      if (!token) {\n        setTasks([]);\n        return;\n      }\n      setLoading(true);\n      setError('');\n      try {\n        // 2. Añadimos la fecha seleccionada como un parámetro en la URL\n        const res = await axios.get(`http://localhost:3000/api/task?fecha=${selectedDate}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(`✅ DATOS RECIBIDOS DEL BACKEND PARA LA FECHA ${selectedDate}:`, res.data);\n        setTasks(res.data);\n      } catch (err) {\n        console.error(\"Error al obtener las tareas:\", err);\n        setError(\"No se pudieron cargar las tareas para esta fecha.\");\n        setTasks([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n    // 3. Hacemos que el useEffect se ejecute de nuevo si la fecha seleccionada cambia\n  }, [token, refreshKey, selectedDate]);\n\n  // 4. Función para manejar el cambio en el input de fecha\n  const handleDateChange = e => {\n    setSelectedDate(e.target.value);\n  };\n  const renderContent = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando tareas...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this);\n    }\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }, this);\n    }\n    if (tasks.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A\\xFAn no tienes tareas. \\xA1A\\xF1ade una para comenzar!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 14\n      }, this);\n    }\n    return tasks.map(task => {\n      // Log para cada tarea que se va a renderizar\n      console.log(\"Renderizando tarea:\", task.meta, task._id);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.taskContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.taskCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.taskHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.taskMeta,\n              children: task.meta\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.taskUrgency,\n              children: task.urgencia\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.taskDetails,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: task.fecha ? new Date(task.fecha).toLocaleDateString() : 'Sin fecha'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Horario: \", task.horario || 'Sin horario']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, task._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mis Tareas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: handleDateChange,\n        className: style.datePicker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.tasksList,\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(Tareas, \"MFto2PfbBvjo4fh6GFTqMjr83gk=\");\n_c = Tareas;\nexport default Tareas;\nvar _c;\n$RefreshReg$(_c, \"Tareas\");","map":{"version":3,"names":["axios","useState","useEffect","style","jsxDEV","_jsxDEV","getTodayString","today","Date","setMinutes","getMinutes","getTimezoneOffset","toISOString","slice","Tareas","token","refreshKey","_s","tasks","setTasks","loading","setLoading","error","setError","selectedDate","setSelectedDate","fetchTasks","res","get","headers","Authorization","console","log","data","err","handleDateChange","e","target","value","renderContent","children","fileName","_jsxFileName","lineNumber","columnNumber","color","length","map","task","meta","_id","className","taskContainer","taskCard","taskHeader","taskMeta","taskUrgency","urgencia","taskDetails","fecha","toLocaleDateString","horario","container","header","type","onChange","datePicker","tasksList","_c","$RefreshReg$"],"sources":["/Users/maidev/Desktop/maiWork/growth-web/src/components/Tareas.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport style from '../style/Tarea.module.css';\n\n// Función auxiliar para obtener la fecha de hoy en formato YYYY-MM-DD\nconst getTodayString = () => {\n  const today = new Date();\n  // Ajustamos por la zona horaria para evitar problemas de un día antes/después\n  today.setMinutes(today.getMinutes() - today.getTimezoneOffset());\n  return today.toISOString().slice(0, 10);\n};\n\nfunction Tareas({ token, refreshKey }) {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // 1. Nuevo estado para guardar la fecha seleccionada. Inicia con el día de hoy.\n  const [selectedDate, setSelectedDate] = useState(getTodayString());\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      if (!token) {\n        setTasks([]);\n        return;\n      }\n      setLoading(true);\n      setError('');\n      try {\n        // 2. Añadimos la fecha seleccionada como un parámetro en la URL\n        const res = await axios.get(`http://localhost:3000/api/task?fecha=${selectedDate}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        console.log(`✅ DATOS RECIBIDOS DEL BACKEND PARA LA FECHA ${selectedDate}:`, res.data);\n        setTasks(res.data);\n      } catch (err) {\n        console.error(\"Error al obtener las tareas:\", err);\n        setError(\"No se pudieron cargar las tareas para esta fecha.\");\n        setTasks([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n    // 3. Hacemos que el useEffect se ejecute de nuevo si la fecha seleccionada cambia\n  }, [token, refreshKey, selectedDate]);\n\n  // 4. Función para manejar el cambio en el input de fecha\n  const handleDateChange = (e) => {\n    setSelectedDate(e.target.value);\n  };\n  const renderContent = () => {\n    if (loading) {\n      return <p>Cargando tareas...</p>;\n    }\n\n    if (error) {\n      return <p style={{ color: 'red' }}>{error}</p>;\n    }\n\n    if (tasks.length === 0) {\n      return <p>Aún no tienes tareas. ¡Añade una para comenzar!</p>;\n    }\n\n    return tasks.map((task) => {\n      // Log para cada tarea que se va a renderizar\n      console.log(\"Renderizando tarea:\", task.meta, task._id);\n\n      return (\n        <div className={style.taskContainer}>\n          <div key={task._id} className={style.taskCard}>\n            <div className={style.taskHeader}>\n              <p className={style.taskMeta}>{task.meta}</p>\n              <p className={style.taskUrgency}>{task.urgencia}</p>\n            </div>\n            <div className={style.taskDetails}>\n\n              <p>{task.fecha ? new Date(task.fecha).toLocaleDateString() : 'Sin fecha'}</p>\n              <p>Horario: {task.horario || 'Sin horario'}</p>\n            </div>\n          </div>  \n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className={style.container}>\n\n      <div className={style.header}>\n        <h1>Mis Tareas</h1>\n        <input\n          type=\"date\"\n          value={selectedDate}\n          onChange={handleDateChange}\n          className={style.datePicker}\n        />\n      </div>\n\n      <div className={style.tasksList}>\n        {renderContent()}\n      </div>\n    </div>\n  );\n}\n\nexport default Tareas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}