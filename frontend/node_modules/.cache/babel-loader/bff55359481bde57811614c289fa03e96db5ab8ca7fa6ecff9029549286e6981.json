{"ast":null,"code":"var _jsxFileName = \"/Users/maidev/Desktop/maiWork/growth-web/frontend/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport AppRoutes from './AppRoutes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const [refreshKey, setRefreshKey] = useState(0);\n\n  // La única función que maneja la actualización de tareas\n  const handleTaskUpdate = () => {\n    setTaskToEdit(null);\n    setRefreshKey(prevKey => prevKey + 1);\n  };\n\n  // --- AÑADIMOS ESTADO PARA EDITAR MOVIMIENTOS ---\n  const [movementToEdit, setMovementToEdit] = useState(null);\n\n  // --- MODIFICAMOS la función de refresco para que también limpie este estado ---\n  const handleDataRefresh = () => {\n    setMovementToEdit(null); // Limpia el formulario de ingresos/egresos\n    setRefreshKey(prevKey => prevKey + 1);\n  };\n\n  // El resto de tus estados y funciones de App...\n  const [activeView, setActiveView] = useState(null);\n  const handleAuthSuccess = newToken => {\n    setToken(newToken);\n    setActiveView(null);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n  };\n  const handleLoginClick = () => setActiveView(\"login\");\n  const handleCloseModal = () => setActiveView(null);\n  return /*#__PURE__*/_jsxDEV(AppRoutes, {\n    token: token,\n    onAuthSuccess: handleAuthSuccess,\n    onLogout: handleLogout,\n    onLoginClick: handleLoginClick,\n    onCloseModal: handleCloseModal,\n    activeView: activeView\n\n    // --- Pasamos las props de tareas con nombres consistentes ---\n    ,\n    taskToEdit: taskToEdit,\n    setTaskToEdit: setTaskToEdit,\n    onTaskUpdate: handleTaskUpdate,\n    refreshKey: refreshKey,\n    onMovementUpdate: handleDataRefresh\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"2rmM0/M/lWdVzhR7bNokOapKKKs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","AppRoutes","jsxDEV","_jsxDEV","App","_s","token","setToken","localStorage","getItem","taskToEdit","setTaskToEdit","refreshKey","setRefreshKey","handleTaskUpdate","prevKey","movementToEdit","setMovementToEdit","handleDataRefresh","activeView","setActiveView","handleAuthSuccess","newToken","handleLogout","removeItem","handleLoginClick","handleCloseModal","onAuthSuccess","onLogout","onLoginClick","onCloseModal","onTaskUpdate","onMovementUpdate","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maidev/Desktop/maiWork/growth-web/frontend/src/components/App.jsx"],"sourcesContent":["import { useState } from 'react';\nimport AppRoutes from './AppRoutes';\n\nfunction App() {\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const [refreshKey, setRefreshKey] = useState(0);\n\n  // La única función que maneja la actualización de tareas\n  const handleTaskUpdate = () => {\n    setTaskToEdit(null);\n    setRefreshKey(prevKey => prevKey + 1);\n  };\n\n    // --- AÑADIMOS ESTADO PARA EDITAR MOVIMIENTOS ---\n  const [movementToEdit, setMovementToEdit] = useState(null);\n\n  // --- MODIFICAMOS la función de refresco para que también limpie este estado ---\n  const handleDataRefresh = () => {\n    setMovementToEdit(null); // Limpia el formulario de ingresos/egresos\n    setRefreshKey((prevKey) => prevKey + 1);\n  };\n\n  // El resto de tus estados y funciones de App...\n  const [activeView, setActiveView] = useState(null);\n  const handleAuthSuccess = (newToken) => { setToken(newToken); setActiveView(null); };\n  const handleLogout = () => { localStorage.removeItem('token'); setToken(null); };\n  const handleLoginClick = () => setActiveView(\"login\");\n  const handleCloseModal = () => setActiveView(null);\n\n  return (\n   \n      <AppRoutes\n        token={token}\n        onAuthSuccess={handleAuthSuccess}\n        onLogout={handleLogout}\n        onLoginClick={handleLoginClick}\n        onCloseModal={handleCloseModal}\n        activeView={activeView}\n        \n        // --- Pasamos las props de tareas con nombres consistentes ---\n        taskToEdit={taskToEdit}\n        setTaskToEdit={setTaskToEdit}\n        onTaskUpdate={handleTaskUpdate}\n        refreshKey={refreshKey}\n        onMovementUpdate={handleDataRefresh}\n      />\n  \n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACQ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACjE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMc,gBAAgB,GAAGA,CAAA,KAAM;IAC7BH,aAAa,CAAC,IAAI,CAAC;IACnBE,aAAa,CAACE,OAAO,IAAIA,OAAO,GAAG,CAAC,CAAC;EACvC,CAAC;;EAEC;EACF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA,MAAMkB,iBAAiB,GAAGA,CAAA,KAAM;IAC9BD,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;IACzBJ,aAAa,CAAEE,OAAO,IAAKA,OAAO,GAAG,CAAC,CAAC;EACzC,CAAC;;EAED;EACA,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMqB,iBAAiB,GAAIC,QAAQ,IAAK;IAAEf,QAAQ,CAACe,QAAQ,CAAC;IAAEF,aAAa,CAAC,IAAI,CAAC;EAAE,CAAC;EACpF,MAAMG,YAAY,GAAGA,CAAA,KAAM;IAAEf,YAAY,CAACgB,UAAU,CAAC,OAAO,CAAC;IAAEjB,QAAQ,CAAC,IAAI,CAAC;EAAE,CAAC;EAChF,MAAMkB,gBAAgB,GAAGA,CAAA,KAAML,aAAa,CAAC,OAAO,CAAC;EACrD,MAAMM,gBAAgB,GAAGA,CAAA,KAAMN,aAAa,CAAC,IAAI,CAAC;EAElD,oBAEIjB,OAAA,CAACF,SAAS;IACRK,KAAK,EAAEA,KAAM;IACbqB,aAAa,EAAEN,iBAAkB;IACjCO,QAAQ,EAAEL,YAAa;IACvBM,YAAY,EAAEJ,gBAAiB;IAC/BK,YAAY,EAAEJ,gBAAiB;IAC/BP,UAAU,EAAEA;;IAEZ;IAAA;IACAT,UAAU,EAAEA,UAAW;IACvBC,aAAa,EAAEA,aAAc;IAC7BoB,YAAY,EAAEjB,gBAAiB;IAC/BF,UAAU,EAAEA,UAAW;IACvBoB,gBAAgB,EAAEd;EAAkB;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAGR;AAAC/B,EAAA,CA9CQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}