{"ast":null,"code":"var _jsxFileName = \"/Users/maidev/Desktop/maiWork/growth-web/frontend/src/components/App.jsx\",\n  _s = $RefreshSig$();\n// src/App.js (VERSIÓN FINAL)\n\nimport { useState } from 'react';\nimport AppRoutes from './AppRoutes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Estado para la edición de tareas\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const [refreshKey, setRefreshKey] = useState(0);\n\n  // Esta es la función que se llamará después de crear O editar una tarea\n  const handleTaskUpdate = () => {\n    setTaskToEdit(null); // Limpia el formulario y sale del modo edición\n    setRefreshKey(prevKey => prevKey + 1); // Fuerza la actualización de la lista\n  };\n\n  // Lógica para el login/logout (ejemplo)\n  const handleAuthSuccess = newToken => {\n    localStorage.setItem('token', newToken);\n    setToken(newToken);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AppRoutes, {\n    token: token,\n    onAuthSuccess: handleAuthSuccess,\n    onLogout: handleLogout\n\n    // --- Props para las tareas ---\n    ,\n    taskToEdit: taskToEdit,\n    setTaskToEdit: setTaskToEdit,\n    onTaskUpdate: handleTaskUpdate // Pasamos la función con un nombre claro\n    ,\n    refreshKey: refreshKey\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"zaW6zrgbzVZ90muiIs97T9ma57E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","AppRoutes","jsxDEV","_jsxDEV","App","_s","token","setToken","localStorage","getItem","taskToEdit","setTaskToEdit","refreshKey","setRefreshKey","handleTaskUpdate","prevKey","handleAuthSuccess","newToken","setItem","handleLogout","removeItem","onAuthSuccess","onLogout","onTaskUpdate","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maidev/Desktop/maiWork/growth-web/frontend/src/components/App.jsx"],"sourcesContent":["// src/App.js (VERSIÓN FINAL)\n\nimport { useState } from 'react';\n\nimport AppRoutes from './AppRoutes';\n\nfunction App() {\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  \n  // Estado para la edición de tareas\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const [refreshKey, setRefreshKey] = useState(0);\n\n  // Esta es la función que se llamará después de crear O editar una tarea\n  const handleTaskUpdate = () => {\n    setTaskToEdit(null); // Limpia el formulario y sale del modo edición\n    setRefreshKey(prevKey => prevKey + 1); // Fuerza la actualización de la lista\n  };\n\n  // Lógica para el login/logout (ejemplo)\n  const handleAuthSuccess = (newToken) => {\n    localStorage.setItem('token', newToken);\n    setToken(newToken);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n  };\n\n  return (\n\n      <AppRoutes\n        token={token}\n        onAuthSuccess={handleAuthSuccess}\n        onLogout={handleLogout}\n        \n        // --- Props para las tareas ---\n        taskToEdit={taskToEdit}\n        setTaskToEdit={setTaskToEdit}\n        onTaskUpdate={handleTaskUpdate} // Pasamos la función con un nombre claro\n        refreshKey={refreshKey}\n      />\n \n  );\n}\n\nexport default App;"],"mappings":";;AAAA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACQ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;;EAEjE;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMc,gBAAgB,GAAGA,CAAA,KAAM;IAC7BH,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACrBE,aAAa,CAACE,OAAO,IAAIA,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;EACzC,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAIC,QAAQ,IAAK;IACtCT,YAAY,CAACU,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC;IACvCV,QAAQ,CAACU,QAAQ,CAAC;EACpB,CAAC;EACD,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;IAChCb,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,oBAEIJ,OAAA,CAACF,SAAS;IACRK,KAAK,EAAEA,KAAM;IACbe,aAAa,EAAEL,iBAAkB;IACjCM,QAAQ,EAAEH;;IAEV;IAAA;IACAT,UAAU,EAAEA,UAAW;IACvBC,aAAa,EAAEA,aAAc;IAC7BY,YAAY,EAAET,gBAAiB,CAAC;IAAA;IAChCF,UAAU,EAAEA;EAAW;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAGR;AAACtB,EAAA,CAtCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}