{"ast":null,"code":"var _jsxFileName = \"/Users/maidev/Desktop/maiWork/growth-web/frontend/src/components/App.jsx\",\n  _s = $RefreshSig$();\n// src/App.js (VERSIÓN FINAL)\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport AppRoutes from \"./AppRoutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [movimientos, setMovimientos] = useState([]);\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const [refreshKey, setRefreshKey] = useState(0);\n\n  // --- 1. CREAMOS UNA FUNCIÓN DE REFRESCO GENÉRICA ---\n  const handleDataRefresh = () => {\n    setRefreshKey(prevKey => prevKey + 1);\n  };\n\n  // --- 2. CREAMOS UNA FUNCIÓN ESPECIAL SOLO PARA CUANDO SE EDITA O CREA UNA TAREA ---\n  const handleTaskUpdate = () => {\n    setTaskToEdit(null); // Limpia el formulario (sale del modo edición)\n    handleDataRefresh(); // Y además, refresca los datos\n  };\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\n\n  // Este useEffect ahora refresca los movimientos cuando `refreshKey` cambia\n  useEffect(() => {\n    const fetchMovimientos = async () => {\n      if (!token) {\n        setMovimientos([]);\n        return;\n      }\n      try {\n        const res = await axios.get(`${API_URL}/api/add`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setMovimientos(res.data);\n      } catch (err) {\n        console.error(\"Error al obtener movimientos:\", err);\n        setMovimientos([]);\n      }\n    };\n    fetchMovimientos();\n  }, [token, refreshKey, API_URL]);\n\n  // Lógica de autenticación (se queda igual)\n  const handleAuthSuccess = newToken => {/* ... */};\n  const handleLogout = () => {/* ... */};\n  const handleLoginClick = () => {/* ... */};\n  const handleCloseModal = () => {/* ... */};\n  const [activeView, setActiveView] = useState(null);\n  return /*#__PURE__*/_jsxDEV(AppRoutes, {\n    token: token,\n    onAuthSuccess: handleAuthSuccess,\n    onLogout: handleLogout,\n    onLoginClick: handleLoginClick,\n    onCloseModal: handleCloseModal,\n    activeView: activeView\n\n    // --- 3. PASAMOS LAS PROPS CON NOMBRES CLAROS ---\n    ,\n    movimientos: movimientos,\n    onMovementAdded: handleDataRefresh // El form de movimientos solo necesita refrescar\n    ,\n    onTaskUpdate: handleTaskUpdate // El form de tareas necesita la función completa\n    ,\n    taskToEdit: taskToEdit,\n    setTaskToEdit: setTaskToEdit,\n    refreshKey: refreshKey\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gTRYfLQgUN32IjkwGyCBqmfd6tU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","AppRoutes","jsxDEV","_jsxDEV","App","_s","token","setToken","localStorage","getItem","movimientos","setMovimientos","taskToEdit","setTaskToEdit","refreshKey","setRefreshKey","handleDataRefresh","prevKey","handleTaskUpdate","API_URL","process","env","REACT_APP_API_URL","fetchMovimientos","res","get","headers","Authorization","data","err","console","error","handleAuthSuccess","newToken","handleLogout","handleLoginClick","handleCloseModal","activeView","setActiveView","onAuthSuccess","onLogout","onLoginClick","onCloseModal","onMovementAdded","onTaskUpdate","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maidev/Desktop/maiWork/growth-web/frontend/src/components/App.jsx"],"sourcesContent":["// src/App.js (VERSIÓN FINAL)\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport AppRoutes from \"./AppRoutes\";\n\nfunction App() {\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [movimientos, setMovimientos] = useState([]);\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const [refreshKey, setRefreshKey] = useState(0);\n\n  // --- 1. CREAMOS UNA FUNCIÓN DE REFRESCO GENÉRICA ---\n  const handleDataRefresh = () => {\n    setRefreshKey((prevKey) => prevKey + 1);\n  };\n  \n  // --- 2. CREAMOS UNA FUNCIÓN ESPECIAL SOLO PARA CUANDO SE EDITA O CREA UNA TAREA ---\n  const handleTaskUpdate = () => {\n    setTaskToEdit(null); // Limpia el formulario (sale del modo edición)\n    handleDataRefresh(); // Y además, refresca los datos\n  };\n  \n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\n\n  // Este useEffect ahora refresca los movimientos cuando `refreshKey` cambia\n  useEffect(() => {\n    const fetchMovimientos = async () => {\n      if (!token) { setMovimientos([]); return; }\n      try {\n        const res = await axios.get(`${API_URL}/api/add`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setMovimientos(res.data);\n      } catch (err) {\n        console.error(\"Error al obtener movimientos:\", err);\n        setMovimientos([]);\n      }\n    };\n    fetchMovimientos();\n  }, [token, refreshKey, API_URL]);\n\n  // Lógica de autenticación (se queda igual)\n  const handleAuthSuccess = (newToken) => { /* ... */ };\n  const handleLogout = () => { /* ... */ };\n  const handleLoginClick = () => { /* ... */ };\n  const handleCloseModal = () => { /* ... */ };\n  const [activeView, setActiveView] = useState(null);\n\n  return (\n    <AppRoutes\n      token={token}\n      onAuthSuccess={handleAuthSuccess}\n      onLogout={handleLogout}\n      onLoginClick={handleLoginClick}\n      onCloseModal={handleCloseModal}\n      activeView={activeView}\n      \n      // --- 3. PASAMOS LAS PROPS CON NOMBRES CLAROS ---\n      movimientos={movimientos}\n      onMovementAdded={handleDataRefresh} // El form de movimientos solo necesita refrescar\n      onTaskUpdate={handleTaskUpdate}     // El form de tareas necesita la función completa\n      taskToEdit={taskToEdit}\n      setTaskToEdit={setTaskToEdit}\n      refreshKey={refreshKey}\n    />\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACjE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMkB,iBAAiB,GAAGA,CAAA,KAAM;IAC9BD,aAAa,CAAEE,OAAO,IAAKA,OAAO,GAAG,CAAC,CAAC;EACzC,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BL,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACrBG,iBAAiB,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,MAAMG,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;EAExE;EACAvB,SAAS,CAAC,MAAM;IACd,MAAMwB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI,CAACjB,KAAK,EAAE;QAAEK,cAAc,CAAC,EAAE,CAAC;QAAE;MAAQ;MAC1C,IAAI;QACF,MAAMa,GAAG,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAC,GAAGN,OAAO,UAAU,EAAE;UAChDO,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUrB,KAAK;UAAG;QAC9C,CAAC,CAAC;QACFK,cAAc,CAACa,GAAG,CAACI,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,GAAG,CAAC;QACnDlB,cAAc,CAAC,EAAE,CAAC;MACpB;IACF,CAAC;IACDY,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACjB,KAAK,EAAEQ,UAAU,EAAEK,OAAO,CAAC,CAAC;;EAEhC;EACA,MAAMa,iBAAiB,GAAIC,QAAQ,IAAK,CAAE,UAAW;EACrD,MAAMC,YAAY,GAAGA,CAAA,KAAM,CAAE,UAAW;EACxC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM,CAAE,UAAW;EAC5C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM,CAAE,UAAW;EAC5C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EAElD,oBACEK,OAAA,CAACF,SAAS;IACRK,KAAK,EAAEA,KAAM;IACbiC,aAAa,EAAEP,iBAAkB;IACjCQ,QAAQ,EAAEN,YAAa;IACvBO,YAAY,EAAEN,gBAAiB;IAC/BO,YAAY,EAAEN,gBAAiB;IAC/BC,UAAU,EAAEA;;IAEZ;IAAA;IACA3B,WAAW,EAAEA,WAAY;IACzBiC,eAAe,EAAE3B,iBAAkB,CAAC;IAAA;IACpC4B,YAAY,EAAE1B,gBAAiB,CAAK;IAAA;IACpCN,UAAU,EAAEA,UAAW;IACvBC,aAAa,EAAEA,aAAc;IAC7BC,UAAU,EAAEA;EAAW;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEN;AAAC3C,EAAA,CA7DQD,GAAG;AAAA6C,EAAA,GAAH7C,GAAG;AA+DZ,eAAeA,GAAG;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}