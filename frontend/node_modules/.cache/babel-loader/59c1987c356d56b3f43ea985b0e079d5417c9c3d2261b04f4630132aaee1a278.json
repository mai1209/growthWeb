{"ast":null,"code":"var _jsxFileName = \"/Users/maidev/Desktop/maiWork/growth-web/frontend/src/components/App.jsx\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport AppRoutes from \"./AppRoutes\"; // El nuevo componente que manejará las rutas\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [activeView, setActiveView] = useState(null); // Para el modal de login\n  const [refreshKey, setRefreshKey] = useState(0);\n  const [movimientos, setMovimientos] = useState([]);\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\n  useEffect(() => {\n    const fetchMovimientos = async () => {\n      if (!token) {\n        setMovimientos([]);\n        return;\n      }\n      try {\n        const res = await axios.get(`${API_URL}/api/add`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setMovimientos(res.data);\n      } catch (err) {\n        console.error(\"Error al obtener movimientos:\", err);\n        setMovimientos([]);\n      }\n    };\n    fetchMovimientos();\n  }, [token, refreshKey]);\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    setToken(null);\n  };\n  const handleMovementAdded = () => setRefreshKey(prevKey => prevKey + 1);\n  const handleAuthSuccess = newToken => {\n    localStorage.setItem(\"token\", newToken);\n    setToken(newToken);\n    setActiveView(null);\n  };\n  const handleLoginClick = () => setActiveView(\"login\");\n  const handleCloseModal = () => setActiveView(null);\n\n  // --- LÓGICA PARA LA EDICIÓN DE TAREAS ---\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const handleTaskUpdate = () => {\n    setTaskToEdit(null); // Limpia el formulario y sale del modo edición\n    setRefreshKey(prevKey => prevKey + 1); // Fuerza a Tareas a recargar los datos\n  };\n  return /*#__PURE__*/_jsxDEV(AppRoutes, {\n    token: token,\n    onAuthSuccess: handleAuthSuccess,\n    onLoginClick: handleLoginClick,\n    onCloseModal: handleCloseModal,\n    activeView: activeView,\n    onMovementAdded: handleMovementAdded,\n    onLogout: handleLogout,\n    movimientos: movimientos,\n    refreshKey: refreshKey,\n    taskToEdit: taskToEdit,\n    setTaskToEdit: setTaskToEdit,\n    onTaskUpdate: handleTaskUpdate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fdRuwwrjTBQstB3TC5KOM0H6Qic=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","AppRoutes","jsxDEV","_jsxDEV","App","_s","token","setToken","localStorage","getItem","activeView","setActiveView","refreshKey","setRefreshKey","movimientos","setMovimientos","API_URL","process","env","REACT_APP_API_URL","fetchMovimientos","res","get","headers","Authorization","data","err","console","error","handleLogout","removeItem","handleMovementAdded","prevKey","handleAuthSuccess","newToken","setItem","handleLoginClick","handleCloseModal","taskToEdit","setTaskToEdit","handleTaskUpdate","onAuthSuccess","onLoginClick","onCloseModal","onMovementAdded","onLogout","onTaskUpdate","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maidev/Desktop/maiWork/growth-web/frontend/src/components/App.jsx"],"sourcesContent":["// src/App.js\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport AppRoutes from \"./AppRoutes\"; // El nuevo componente que manejará las rutas\n\nfunction App() {\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [activeView, setActiveView] = useState(null); // Para el modal de login\n  const [refreshKey, setRefreshKey] = useState(0);\n  const [movimientos, setMovimientos] = useState([]);\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\n  useEffect(() => {\n    const fetchMovimientos = async () => {\n      if (!token) {\n        setMovimientos([]);\n        return;\n      }\n      try {\n        const res = await axios.get(`${API_URL}/api/add`,  {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setMovimientos(res.data);\n      } catch (err) {\n        console.error(\"Error al obtener movimientos:\", err);\n        setMovimientos([]);\n      }\n    };\n    fetchMovimientos();\n  }, [token, refreshKey]);\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    setToken(null);\n  };\n  const handleMovementAdded = () => setRefreshKey((prevKey) => prevKey + 1);\n  const handleAuthSuccess = (newToken) => {\n    localStorage.setItem(\"token\", newToken);\n    setToken(newToken);\n    setActiveView(null);\n  };\n  const handleLoginClick = () => setActiveView(\"login\");\n  const handleCloseModal = () => setActiveView(null);\n\n // --- LÓGICA PARA LA EDICIÓN DE TAREAS ---\n  const [taskToEdit, setTaskToEdit] = useState(null);\n \n\n  const handleTaskUpdate = () => {\n    setTaskToEdit(null); // Limpia el formulario y sale del modo edición\n    setRefreshKey(prevKey => prevKey + 1); // Fuerza a Tareas a recargar los datos\n  };\n  return (\n    <AppRoutes\n      token={token}\n      onAuthSuccess={handleAuthSuccess}\n      onLoginClick={handleLoginClick}\n      onCloseModal={handleCloseModal}\n      activeView={activeView}\n      onMovementAdded={handleMovementAdded}\n      onLogout={handleLogout}\n      movimientos={movimientos}\n      refreshKey={refreshKey}\n     \n      taskToEdit={taskToEdit}\n      setTaskToEdit={setTaskToEdit}\n      onTaskUpdate={handleTaskUpdate}\n   \n    />\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}