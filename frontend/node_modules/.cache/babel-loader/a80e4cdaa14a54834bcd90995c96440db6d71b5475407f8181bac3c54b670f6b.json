{"ast":null,"code":"var _jsxFileName = \"/Users/maidev/Desktop/maiWork/growth-web/frontend/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppRoutes from './AppRoutes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const [refreshKey, setRefreshKey] = useState(0);\n\n  // La única función que maneja la actualización de tareas\n  const handleTaskUpdate = () => {\n    setTaskToEdit(null);\n    setRefreshKey(prevKey => prevKey + 1);\n  };\n\n  // El resto de tus estados y funciones de App...\n  const [activeView, setActiveView] = useState(null);\n  const handleAuthSuccess = newToken => {\n    setToken(newToken);\n    setActiveView(null);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n  };\n  const handleLoginClick = () => setActiveView(\"login\");\n  const handleCloseModal = () => setActiveView(null);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AppRoutes, {\n      token: token,\n      onAuthSuccess: handleAuthSuccess,\n      onLogout: handleLogout,\n      onLoginClick: handleLoginClick,\n      onCloseModal: handleCloseModal,\n      activeView: activeView\n\n      // --- Pasamos las props de tareas con nombres consistentes ---\n      ,\n      taskToEdit: taskToEdit,\n      setTaskToEdit: setTaskToEdit,\n      onTaskUpdate: handleTaskUpdate,\n      refreshKey: refreshKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tHtRlhOR8TbG17Bv60cTRwZSEHA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","BrowserRouter","AppRoutes","jsxDEV","_jsxDEV","App","_s","token","setToken","localStorage","getItem","taskToEdit","setTaskToEdit","refreshKey","setRefreshKey","handleTaskUpdate","prevKey","activeView","setActiveView","handleAuthSuccess","newToken","handleLogout","removeItem","handleLoginClick","handleCloseModal","children","onAuthSuccess","onLogout","onLoginClick","onCloseModal","onTaskUpdate","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maidev/Desktop/maiWork/growth-web/frontend/src/components/App.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppRoutes from './AppRoutes';\n\nfunction App() {\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const [refreshKey, setRefreshKey] = useState(0);\n\n  // La única función que maneja la actualización de tareas\n  const handleTaskUpdate = () => {\n    setTaskToEdit(null);\n    setRefreshKey(prevKey => prevKey + 1);\n  };\n\n  // El resto de tus estados y funciones de App...\n  const [activeView, setActiveView] = useState(null);\n  const handleAuthSuccess = (newToken) => { setToken(newToken); setActiveView(null); };\n  const handleLogout = () => { localStorage.removeItem('token'); setToken(null); };\n  const handleLoginClick = () => setActiveView(\"login\");\n  const handleCloseModal = () => setActiveView(null);\n\n  return (\n    <BrowserRouter>\n      <AppRoutes\n        token={token}\n        onAuthSuccess={handleAuthSuccess}\n        onLogout={handleLogout}\n        onLoginClick={handleLoginClick}\n        onCloseModal={handleCloseModal}\n        activeView={activeView}\n        \n        // --- Pasamos las props de tareas con nombres consistentes ---\n        taskToEdit={taskToEdit}\n        setTaskToEdit={setTaskToEdit}\n        onTaskUpdate={handleTaskUpdate}\n        refreshKey={refreshKey}\n      />\n    </BrowserRouter>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACS,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACjE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMe,gBAAgB,GAAGA,CAAA,KAAM;IAC7BH,aAAa,CAAC,IAAI,CAAC;IACnBE,aAAa,CAACE,OAAO,IAAIA,OAAO,GAAG,CAAC,CAAC;EACvC,CAAC;;EAED;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMmB,iBAAiB,GAAIC,QAAQ,IAAK;IAAEZ,QAAQ,CAACY,QAAQ,CAAC;IAAEF,aAAa,CAAC,IAAI,CAAC;EAAE,CAAC;EACpF,MAAMG,YAAY,GAAGA,CAAA,KAAM;IAAEZ,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;IAAEd,QAAQ,CAAC,IAAI,CAAC;EAAE,CAAC;EAChF,MAAMe,gBAAgB,GAAGA,CAAA,KAAML,aAAa,CAAC,OAAO,CAAC;EACrD,MAAMM,gBAAgB,GAAGA,CAAA,KAAMN,aAAa,CAAC,IAAI,CAAC;EAElD,oBACEd,OAAA,CAACH,aAAa;IAAAwB,QAAA,eACZrB,OAAA,CAACF,SAAS;MACRK,KAAK,EAAEA,KAAM;MACbmB,aAAa,EAAEP,iBAAkB;MACjCQ,QAAQ,EAAEN,YAAa;MACvBO,YAAY,EAAEL,gBAAiB;MAC/BM,YAAY,EAAEL,gBAAiB;MAC/BP,UAAU,EAAEA;;MAEZ;MAAA;MACAN,UAAU,EAAEA,UAAW;MACvBC,aAAa,EAAEA,aAAc;MAC7BkB,YAAY,EAAEf,gBAAiB;MAC/BF,UAAU,EAAEA;IAAW;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEpB;AAAC5B,EAAA,CApCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}