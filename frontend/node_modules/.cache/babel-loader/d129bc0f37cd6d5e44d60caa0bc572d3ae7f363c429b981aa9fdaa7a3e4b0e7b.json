{"ast":null,"code":"var _jsxFileName = \"/Users/maidev/Desktop/maiWork/growth-web/src/components/Tareas.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n// ...otros imports\nimport DatePicker from 'react-datepicker';\n\n// 1. PRIMERO el CSS de la librería\nimport 'react-datepicker/dist/react-datepicker.css';\nimport style from '../style/Tarea.module.css';\n\n// Función auxiliar para obtener la fecha de hoy en formato YYYY-MM-DD\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getTodayString = () => {\n  const today = new Date();\n  // Ajustamos por la zona horaria para evitar problemas de un día antes/después\n  today.setMinutes(today.getMinutes() - today.getTimezoneOffset());\n  return today.toISOString().slice(0, 10);\n};\nfunction Tareas({\n  token,\n  refreshKey\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // 1. Nuevo estado para guardar la fecha seleccionada. Inicia con el día de hoy.\n  const [selectedDate, setSelectedDate] = useState(getTodayString());\n  useEffect(() => {\n    const fetchTasks = async () => {\n      if (!token) {\n        setTasks([]);\n        return;\n      }\n      setLoading(true);\n      setError('');\n      try {\n        // 2. Añadimos la fecha seleccionada como un parámetro en la URL\n        const res = await axios.get(`http://localhost:3000/api/task?fecha=${selectedDate}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(`✅ DATOS RECIBIDOS DEL BACKEND PARA LA FECHA ${selectedDate}:`, res.data);\n        setTasks(res.data);\n      } catch (err) {\n        console.error(\"Error al obtener las tareas:\", err);\n        setError(\"No se pudieron cargar las tareas para esta fecha.\");\n        setTasks([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n    // 3. Hacemos que el useEffect se ejecute de nuevo si la fecha seleccionada cambia\n  }, [token, refreshKey, selectedDate]);\n\n  // 4. Función para manejar el cambio en el input de fecha\n  const handleDateChange = e => {\n    setSelectedDate(e.target.value);\n  };\n  const renderContent = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando tareas...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, this);\n    }\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }, this);\n    }\n    if (tasks.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A\\xFAn no tienes tareas. \\xA1A\\xF1ade una para comenzar!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }, this);\n    }\n\n    // --- 1. AÑADE ESTA NUEVA FUNCIÓN ---\n    const handleToggleComplete = async (taskId, currentStatus) => {\n      try {\n        // Hacemos la petición PUT a la nueva ruta, enviando el estado opuesto\n        const response = await axios.put(`http://localhost:3000/api/task/${taskId}`, {\n          completada: !currentStatus\n        },\n        // El nuevo estado\n        {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // 2. Actualizamos el estado localmente para una respuesta instantánea\n        setTasks(prevTasks => prevTasks.map(task => task._id === taskId ? response.data : task));\n      } catch (err) {\n        console.error(\"Error al actualizar la tarea:\", err);\n      }\n    };\n\n    // --- 1. AÑADE LA NUEVA FUNCIÓN PARA BORRAR ---\n    const handleDeleteTask = async taskId => {\n      // Opcional: Pedir confirmación al usuario\n      if (!window.confirm(\"¿Estás seguro de que quieres eliminar esta tarea?\")) {\n        return;\n      }\n      try {\n        // Hacemos la petición DELETE a la nueva ruta del backend\n        await axios.delete(`http://localhost:3000/api/task/${taskId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // 2. Actualizamos el estado para eliminar la tarea de la vista al instante\n        setTasks(prevTasks => prevTasks.filter(task => task._id !== taskId));\n      } catch (err) {\n        console.error(\"Error al eliminar la tarea:\", err);\n        // Podrías mostrar una notificación de error aquí\n      }\n    };\n    return tasks.map(task => {\n      // Log para cada tarea que se va a renderizar\n      console.log(\"Renderizando tarea:\", task.meta, task._id);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.taskContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${style.taskCard} ${task.completada ? style.completed : ''} ${style[task.color] || style.color1}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.taskHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.taskMeta,\n              children: task.meta\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.taskUrgency,\n              children: [\"Urgencia > \", task.urgencia]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.taskDetails,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Horario: \", task.horario || 'Sin horario']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.taskActions,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: task.completada ? style.statusDone : style.statusPending,\n              children: task.completada ? 'Hecho' : 'Pendiente'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.completada,\n              onChange: () => handleToggleComplete(task._id, task.completada)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTask(task._id),\n              className: style.deleteButton,\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, task._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mis Tareas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        type: \"date\",\n        value: selectedDate,\n        onChange: handleDateChange,\n        className: style.datePicker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.tasksList,\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_s(Tareas, \"MFto2PfbBvjo4fh6GFTqMjr83gk=\");\n_c = Tareas;\nexport default Tareas;\nvar _c;\n$RefreshReg$(_c, \"Tareas\");","map":{"version":3,"names":["axios","useState","useEffect","DatePicker","style","jsxDEV","_jsxDEV","getTodayString","today","Date","setMinutes","getMinutes","getTimezoneOffset","toISOString","slice","Tareas","token","refreshKey","_s","tasks","setTasks","loading","setLoading","error","setError","selectedDate","setSelectedDate","fetchTasks","res","get","headers","Authorization","console","log","data","err","handleDateChange","e","target","value","renderContent","children","fileName","_jsxFileName","lineNumber","columnNumber","color","length","handleToggleComplete","taskId","currentStatus","response","put","completada","prevTasks","map","task","_id","handleDeleteTask","window","confirm","delete","filter","meta","className","taskContainer","taskCard","completed","color1","taskHeader","taskMeta","taskUrgency","urgencia","taskDetails","horario","taskActions","statusDone","statusPending","type","checked","onChange","onClick","deleteButton","container","header","datePicker","tasksList","_c","$RefreshReg$"],"sources":["/Users/maidev/Desktop/maiWork/growth-web/src/components/Tareas.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n// ...otros imports\nimport DatePicker from 'react-datepicker';\n\n// 1. PRIMERO el CSS de la librería\nimport 'react-datepicker/dist/react-datepicker.css';\nimport style from '../style/Tarea.module.css';\n\n// Función auxiliar para obtener la fecha de hoy en formato YYYY-MM-DD\nconst getTodayString = () => {\n  const today = new Date();\n  // Ajustamos por la zona horaria para evitar problemas de un día antes/después\n  today.setMinutes(today.getMinutes() - today.getTimezoneOffset());\n  return today.toISOString().slice(0, 10);\n};\n\nfunction Tareas({ token, refreshKey }) {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // 1. Nuevo estado para guardar la fecha seleccionada. Inicia con el día de hoy.\n  const [selectedDate, setSelectedDate] = useState(getTodayString());\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      if (!token) {\n        setTasks([]);\n        return;\n      }\n      setLoading(true);\n      setError('');\n      try {\n        // 2. Añadimos la fecha seleccionada como un parámetro en la URL\n        const res = await axios.get(`http://localhost:3000/api/task?fecha=${selectedDate}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        console.log(`✅ DATOS RECIBIDOS DEL BACKEND PARA LA FECHA ${selectedDate}:`, res.data);\n        setTasks(res.data);\n      } catch (err) {\n        console.error(\"Error al obtener las tareas:\", err);\n        setError(\"No se pudieron cargar las tareas para esta fecha.\");\n        setTasks([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n    // 3. Hacemos que el useEffect se ejecute de nuevo si la fecha seleccionada cambia\n  }, [token, refreshKey, selectedDate]);\n\n  // 4. Función para manejar el cambio en el input de fecha\n  const handleDateChange = (e) => {\n    setSelectedDate(e.target.value);\n  };\n  const renderContent = () => {\n    if (loading) {\n      return <p>Cargando tareas...</p>;\n    }\n\n    if (error) {\n      return <p style={{ color: 'red' }}>{error}</p>;\n    }\n\n    if (tasks.length === 0) {\n      return <p>Aún no tienes tareas. ¡Añade una para comenzar!</p>;\n    }\n\n    // --- 1. AÑADE ESTA NUEVA FUNCIÓN ---\n    const handleToggleComplete = async (taskId, currentStatus) => {\n      try {\n        // Hacemos la petición PUT a la nueva ruta, enviando el estado opuesto\n        const response = await axios.put(`http://localhost:3000/api/task/${taskId}`,\n          { completada: !currentStatus }, // El nuevo estado\n          { headers: { Authorization: `Bearer ${token}` } }\n        );\n\n        // 2. Actualizamos el estado localmente para una respuesta instantánea\n        setTasks(prevTasks =>\n          prevTasks.map(task =>\n            task._id === taskId ? response.data : task\n          )\n        );\n\n      } catch (err) {\n        console.error(\"Error al actualizar la tarea:\", err);\n        \n      }\n    };\n\n     // --- 1. AÑADE LA NUEVA FUNCIÓN PARA BORRAR ---\n    const handleDeleteTask = async (taskId) => {\n      // Opcional: Pedir confirmación al usuario\n      if (!window.confirm(\"¿Estás seguro de que quieres eliminar esta tarea?\")) {\n        return;\n      }\n\n      try {\n        // Hacemos la petición DELETE a la nueva ruta del backend\n        await axios.delete(`http://localhost:3000/api/task/${taskId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n\n        // 2. Actualizamos el estado para eliminar la tarea de la vista al instante\n        setTasks(prevTasks => prevTasks.filter(task => task._id !== taskId));\n\n      } catch (err) {\n        console.error(\"Error al eliminar la tarea:\", err);\n        // Podrías mostrar una notificación de error aquí\n      }\n    };\n\n    return tasks.map((task) => {\n      // Log para cada tarea que se va a renderizar\n      console.log(\"Renderizando tarea:\", task.meta, task._id);\n\n      return (\n        <div className={style.taskContainer}>\n          <div key={task._id}   className={`${style.taskCard} ${task.completada ? style.completed : ''} ${style[task.color] || style.color1}`}>\n             \n            \n            <div className={style.taskHeader}>\n\n              <p className={style.taskMeta}>{task.meta}</p>\n              <p className={style.taskUrgency}>Urgencia &gt; {task.urgencia}</p>\n            </div>\n            <div className={style.taskDetails}>\n          \n              <p>Horario: {task.horario || 'Sin horario'}</p>\n            </div>\n            {/* 4. AÑADIMOS EL CHECKBOX */}\n            <div className={style.taskActions}>\n              {/* ✅ SOLUCIÓN 2: Añadido el texto de estado dinámico */}\n              <p className={task.completada ? style.statusDone : style.statusPending}>\n                {task.completada ? 'Hecho' : 'Pendiente'}\n              </p>\n            \n              <input\n                type=\"checkbox\"\n                checked={task.completada}\n                onChange={() => handleToggleComplete(task._id, task.completada)}\n              />\n                <button\n                onClick={() => handleDeleteTask(task._id)}\n                className={style.deleteButton} \n              >\n                🗑️\n              </button>\n            </div>\n              {/* --- 3. AÑADE EL BOTÓN DE BORRAR AQUÍ --- */}\n            \n          </div>\n        </div>\n      );\n    });\n  };\n\n\n  return (\n    <div className={style.container}>\n\n      <div className={style.header}>\n        <h1>Mis Tareas</h1>\n          <DatePicker   type=\"date\"\n          value={selectedDate}\n          onChange={handleDateChange}\n          className={style.datePicker} />\n       \n      </div>\n\n      <div className={style.tasksList}>\n        {renderContent()}\n      </div>\n    </div>\n  );\n}\n\nexport default Tareas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}