{"ast":null,"code":"var _jsxFileName = \"/Users/maidev/Desktop/maiWork/growth-web/src/components/LeftsSite.jsx\",\n  _s = $RefreshSig$();\n// LeftSite.js (Versión Simplificada y Correcta)\n\nimport { useState, useEffect } from 'react';\nimport style from '../style/LeftSite.module.css';\n\n// 1. Recibe 'movimientos' como una prop\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LeftSite({\n  movimientos\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(true);\n  const [totales, setTotales] = useState({\n    ingreso: 0,\n    egreso: 0,\n    total: 0\n  });\n  const toggleContainer = () => setIsOpen(!isOpen);\n\n  // 2. ELIMINAMOS el useEffect que buscaba datos con axios. ¡Ya no es necesario!\n\n  // Calcular totales cuando cambian los movimientos (esto se queda igual)\n  useEffect(() => {\n    const ingreso = movimientos.filter(m => m.tipo === \"ingreso\").reduce((acc, cur) => acc + Number(cur.monto), 0);\n    const egreso = movimientos.filter(m => m.tipo === \"egreso\").reduce((acc, cur) => acc + Number(cur.monto), 0);\n    setTotales({\n      ingreso,\n      egreso,\n      total: ingreso - egreso\n    });\n  }, [movimientos]); // Se ejecuta cuando la prop 'movimientos' cambia\n\n  const formatNumber = num => num.toLocaleString(\"es-AR\", {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  });\n  return (\n    /*#__PURE__*/\n    // ... tu JSX se mantiene exactamente igual ...\n    _jsxDEV(\"div\", {\n      className: `${style.container} ${!isOpen ? style.closed : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(LeftSite, \"MZ2Aft4/6+nDH8VsCYo7UsxGpAE=\");\n_c = LeftSite;\nexport default LeftSite;\nvar _c;\n$RefreshReg$(_c, \"LeftSite\");","map":{"version":3,"names":["useState","useEffect","style","jsxDEV","_jsxDEV","LeftSite","movimientos","_s","isOpen","setIsOpen","totales","setTotales","ingreso","egreso","total","toggleContainer","filter","m","tipo","reduce","acc","cur","Number","monto","formatNumber","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","className","container","closed","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maidev/Desktop/maiWork/growth-web/src/components/LeftsSite.jsx"],"sourcesContent":["// LeftSite.js (Versión Simplificada y Correcta)\n\nimport { useState, useEffect } from 'react';\nimport style from '../style/LeftSite.module.css';\n\n// 1. Recibe 'movimientos' como una prop\nfunction LeftSite({ movimientos }) {\n  const [isOpen, setIsOpen] = useState(true);\n  const [totales, setTotales] = useState({ ingreso: 0, egreso: 0, total: 0 });\n\n  const toggleContainer = () => setIsOpen(!isOpen);\n\n  // 2. ELIMINAMOS el useEffect que buscaba datos con axios. ¡Ya no es necesario!\n\n  // Calcular totales cuando cambian los movimientos (esto se queda igual)\n  useEffect(() => {\n    const ingreso = movimientos\n      .filter(m => m.tipo === \"ingreso\")\n      .reduce((acc, cur) => acc + Number(cur.monto), 0);\n\n    const egreso = movimientos\n      .filter(m => m.tipo === \"egreso\")\n      .reduce((acc, cur) => acc + Number(cur.monto), 0);\n\n    setTotales({\n      ingreso,\n      egreso,\n      total: ingreso - egreso\n    });\n  }, [movimientos]); // Se ejecuta cuando la prop 'movimientos' cambia\n\n  const formatNumber = (num) => \n    num.toLocaleString(\"es-AR\", { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n\n  return (\n    // ... tu JSX se mantiene exactamente igual ...\n    <div className={`${style.container} ${!isOpen ? style.closed : ''}`}>\n      {/* ... */}\n    </div>\n  );\n}\n\nexport default LeftSite;"],"mappings":";;AAAA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,8BAA8B;;AAEhD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,QAAQA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC;IAAEY,OAAO,EAAE,CAAC;IAAEC,MAAM,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAE,CAAC,CAAC;EAE3E,MAAMC,eAAe,GAAGA,CAAA,KAAMN,SAAS,CAAC,CAACD,MAAM,CAAC;;EAEhD;;EAEA;EACAP,SAAS,CAAC,MAAM;IACd,MAAMW,OAAO,GAAGN,WAAW,CACxBU,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,SAAS,CAAC,CACjCC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAGE,MAAM,CAACD,GAAG,CAACE,KAAK,CAAC,EAAE,CAAC,CAAC;IAEnD,MAAMV,MAAM,GAAGP,WAAW,CACvBU,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,QAAQ,CAAC,CAChCC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAGE,MAAM,CAACD,GAAG,CAACE,KAAK,CAAC,EAAE,CAAC,CAAC;IAEnDZ,UAAU,CAAC;MACTC,OAAO;MACPC,MAAM;MACNC,KAAK,EAAEF,OAAO,GAAGC;IACnB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACP,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEnB,MAAMkB,YAAY,GAAIC,GAAG,IACvBA,GAAG,CAACC,cAAc,CAAC,OAAO,EAAE;IAAEC,qBAAqB,EAAE,CAAC;IAAEC,qBAAqB,EAAE;EAAE,CAAC,CAAC;EAErF;IAAA;IACE;IACAxB,OAAA;MAAKyB,SAAS,EAAE,GAAG3B,KAAK,CAAC4B,SAAS,IAAI,CAACtB,MAAM,GAAGN,KAAK,CAAC6B,MAAM,GAAG,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE/D;EAAC;AAEV;AAAC5B,EAAA,CAlCQF,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAoCjB,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}